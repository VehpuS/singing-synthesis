# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages with build

on:
    push:
        branches: ["main"]
        paths:
            - ".github/workflows/deploy-musicxml-singer-with-oddvoices.yml"
            - "musicxml-singer-with-oddvoices/src/**"
            - "musicxml-singer-with-oddvoices/package.json"
            - "musicxml-singer-with-oddvoices/package-lock.json"
            - "musicxml-singer-with-oddvoices/public/**"
            - "musicxml-singer-with-oddvoices/voices/**"
            - "musicxml-singer-with-oddvoices/.env.production"
            - "musicxml-singer-with-oddvoices/tsconfig.json"
            - "musicxml-singer-with-oddvoices/tsconfig.node.json"
            - "musicxml-singer-with-oddvoices/vite.config.js"

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow one concurrent deployment
concurrency:
    group: "pages"
    cancel-in-progress: true

jobs:
    # Single deploy job since we're just deploying
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Set up Node
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: "npm"
                  cache-dependency-path: "musicxml-singer-with-oddvoices/package-lock.json"
            - name: Setup Emscripten toolchain
              uses: mymindstorm/setup-emsdk@v14
            - name: Install dependencies
              working-directory: ./musicxml-singer-with-oddvoices
              run: npm install
            - name: Build
              working-directory: ./musicxml-singer-with-oddvoices
              run: npm run build-github-pages
            - name: Verify Build Output
              working-directory: ./musicxml-singer-with-oddvoices
              run: |
                  if [ ! -d "./dist" ]; then
                    echo "Build directory not found!"
                    exit 1
                  fi
                  echo "Build directory exists and contains:"
                  ls -la ./dist
            - name: Create copy without symlinks or hard links
              working-directory: ./musicxml-singer-with-oddvoices
              run: rsync -aL dist/ dist_no_links/
            - name: Check for symlinks and hardlinks in dist_no_links
              working-directory: ./musicxml-singer-with-oddvoices/dist_no_links
              run: |
                  echo "Checking for symlinks..."
                  if find . -type l | grep -q . ; then
                    echo "Symlinks found!"
                    find . -type l
                    exit 1
                  else
                    echo "No symlinks found."
                  fi

                  echo "Checking for hardlinks..."
                  if find . -type f -links +1 | grep -q . ; then
                    echo "Hardlinks found!"
                    find . -type f -links +1
                    exit 1
                  else
                    echo "No hardlinks found."
                  fi
            - name: Check directory size
              working-directory: ./musicxml-singer-with-oddvoices
              run: du -sh dist_no_links
            - name: Setup Pages
              uses: actions/configure-pages@v3
            - name: Upload dist_no_links as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: dist_no_links_artifact
                  path: "./musicxml-singer-with-oddvoices/dist_no_links"
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  artifact_name: artifact
